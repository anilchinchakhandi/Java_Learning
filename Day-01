1) What is a java?
- java is class based object oriented programming language.

*** IT was developed by " JAMES GOSLING " IN "1995" ***

2) Important features :
- Object oriented programming language.
- Platform independent.
- Robust and Secure.

3) use cases:
- Building android Applications.
- Java web applications.
- Building software tools. etc

4) Java Architecture :

              compiler                  Interpreter
SOURCE CODE ---------------> BYTE CODE ----------------> MACHINE CODE 0/1
(.java)       (javac)         .class      (jvm)


* Mainly THREE components :

* JVM : JAVA VIRTUAL MACHINE 
    1)JVM ia a machine dependent and converts bytecode into machine code.

* JDK : JAVA DEVELOPMENT KIT
    1) It provides the DEVELOPMENT tools

* JRE: JAVA RUN TIME ENVIRONMENT 
    1) JVM + LIBRARIES

5) Naming Conventions :

* Class :
    - It should start with the uppercase letter.
    - It should be a noun such as Color, Button, System, Thread, etc.
      Use appropriate words, instead of acronyms.

ex:- public class Employee
{
//code snippet
}

* Method : 
    - It should start with lowercase letter.
    - It should be a verb such as main(), print(), println().
    - If the name contains multiple words, start it with a lowercase letter followed by an uppercase letter such as actionPerformed().

ex:- class Employee
{
// method
void draw()
{
//code snippet
}
}

* Variable :
    - It should start with a lowercase letter such as id, name.
    - It should not start with the special characters like & (ampersand), $ (dollar), _ (underscore).
    - If the name contains multiple words, start it with the lowercase letter followed by an uppercase letter such as firstName         lastName.
    - Avoid using one-character variables such as x, y, z.

ex:- class Employee
{
// variable
int id;
//code snippet
}

* Package : 
    - It should be a lowercase letter such as java, lang.
    - If the name contains multiple words, it should be separated by dots (.) such as java.util, java.lang.

ex:-//package
package com.javatpoint;
class Employee
{
//code snippet
}

